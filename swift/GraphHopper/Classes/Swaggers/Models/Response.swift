//
// Response.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class Response: JSONEncodable {
    public enum Status: String { 
        case WaitingInQueue = "waiting_in_queue"
        case Processing = "processing"
        case Finished = "finished"
    }
    public var copyrights: [String]?
    /** unique identify of job - which you get when posting your request to the large problem solver */
    public var jobId: String?
    /** indicates the current status of the job */
    public var status: Status?
    /** waiting time in ms */
    public var waitingInQueue: Int64?
    /** processing time in ms. if job is still waiting in queue, processing_time is 0 */
    public var processingTime: Int64?
    /** the solution. only available if status field indicates finished */
    public var solution: Solution?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["copyrights"] = self.copyrights?.encodeToJSON()
        nillableDictionary["job_id"] = self.jobId
        nillableDictionary["status"] = self.status?.rawValue
        nillableDictionary["waiting_in_queue"] = self.waitingInQueue?.encodeToJSON()
        nillableDictionary["processing_time"] = self.processingTime?.encodeToJSON()
        nillableDictionary["solution"] = self.solution?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
