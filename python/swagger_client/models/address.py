# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Address(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Address - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'location_id': 'str',
            'lon': 'float',
            'lat': 'float'
        }

        self.attribute_map = {
            'location_id': 'location_id',
            'lon': 'lon',
            'lat': 'lat'
        }

        self._location_id = None
        self._lon = None
        self._lat = None

    @property
    def location_id(self):
        """
        Gets the location_id of this Address.
        Unique identifier of location

        :return: The location_id of this Address.
        :rtype: str
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """
        Sets the location_id of this Address.
        Unique identifier of location

        :param location_id: The location_id of this Address.
        :type: str
        """
        self._location_id = location_id

    @property
    def lon(self):
        """
        Gets the lon of this Address.
        longitude

        :return: The lon of this Address.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """
        Sets the lon of this Address.
        longitude

        :param lon: The lon of this Address.
        :type: float
        """
        self._lon = lon

    @property
    def lat(self):
        """
        Gets the lat of this Address.
        latitude

        :return: The lat of this Address.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """
        Sets the lat of this Address.
        latitude

        :param lat: The lat of this Address.
        :type: float
        """
        self._lat = lat

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
