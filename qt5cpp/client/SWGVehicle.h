/**
 * Route Optimization API
 * Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * SWGVehicle.h
 * 
 * 
 */

#ifndef SWGVehicle_H_
#define SWGVehicle_H_

#include <QJsonObject>


#include "SWGAddress.h"
#include "SWGBreak.h"
#include <QList>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGVehicle: public SWGObject {
public:
    SWGVehicle();
    SWGVehicle(QString* json);
    virtual ~SWGVehicle();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGVehicle* fromJson(QString &jsonString);

    QString* getVehicleId();
    void setVehicleId(QString* vehicle_id);
QString* getTypeId();
    void setTypeId(QString* type_id);
SWGAddress* getStartAddress();
    void setStartAddress(SWGAddress* start_address);
SWGAddress* getEndAddress();
    void setEndAddress(SWGAddress* end_address);
SWGBreak* getBreak();
    void setBreak(SWGBreak* break);
bool getReturnToDepot();
    void setReturnToDepot(bool return_to_depot);
qint64 getEarliestStart();
    void setEarliestStart(qint64 earliest_start);
qint64 getLatestEnd();
    void setLatestEnd(qint64 latest_end);
QList<QString*>* getSkills();
    void setSkills(QList<QString*>* skills);

private:
    QString* vehicle_id;
QString* type_id;
SWGAddress* start_address;
SWGAddress* end_address;
SWGBreak* break;
bool return_to_depot;
qint64 earliest_start;
qint64 latest_end;
QList<QString*>* skills;
};

} /* namespace Swagger */

#endif /* SWGVehicle_H_ */
