/**
 * Route Optimization API
 * Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * SWGVehicleType.h
 * 
 * 
 */

#ifndef SWGVehicleType_H_
#define SWGVehicleType_H_

#include <QJsonObject>


#include <QList>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGVehicleType: public SWGObject {
public:
    SWGVehicleType();
    SWGVehicleType(QString* json);
    virtual ~SWGVehicleType();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGVehicleType* fromJson(QString &jsonString);

    QString* getTypeId();
    void setTypeId(QString* type_id);
QString* getProfile();
    void setProfile(QString* profile);
QList<qint32>* getCapacity();
    void setCapacity(QList<qint32>* capacity);
double getSpeedFactor();
    void setSpeedFactor(double speed_factor);
double getServiceTimeFactor();
    void setServiceTimeFactor(double service_time_factor);

private:
    QString* type_id;
QString* profile;
QList<qint32>* capacity;
double speed_factor;
double service_time_factor;
};

} /* namespace Swagger */

#endif /* SWGVehicleType_H_ */
