/**
 * Route Optimization API
 * Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGSolution_unassigned.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGSolution_unassigned::SWGSolution_unassigned(QString* json) {
    init();
    this->fromJson(*json);
}

SWGSolution_unassigned::SWGSolution_unassigned() {
    init();
}

SWGSolution_unassigned::~SWGSolution_unassigned() {
    this->cleanup();
}

void
SWGSolution_unassigned::init() {
    services = new QList<QString*>();
shipments = new QList<QString*>();
}

void
SWGSolution_unassigned::cleanup() {
    if(services != NULL) {
        QList<QString*>* arr = services;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete services;
    }
if(shipments != NULL) {
        QList<QString*>* arr = shipments;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete shipments;
    }
}

SWGSolution_unassigned*
SWGSolution_unassigned::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSolution_unassigned::fromJsonObject(QJsonObject &pJson) {
    setValue(&services, pJson["services"], "QList", "QString");
setValue(&shipments, pJson["shipments"], "QList", "QString");
}

QString
SWGSolution_unassigned::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGSolution_unassigned::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    QList<QString*>* servicesList = services;
    QJsonArray servicesJsonArray;
    toJsonArray((QList<void*>*)services, &servicesJsonArray, "services", "QString");

    obj->insert("services", servicesJsonArray);
    

    
    QList<QString*>* shipmentsList = shipments;
    QJsonArray shipmentsJsonArray;
    toJsonArray((QList<void*>*)shipments, &shipmentsJsonArray, "shipments", "QString");

    obj->insert("shipments", shipmentsJsonArray);
    

    return obj;
}

QList<QString*>*
SWGSolution_unassigned::getServices() {
    return services;
}
void
SWGSolution_unassigned::setServices(QList<QString*>* services) {
    this->services = services;
}

QList<QString*>*
SWGSolution_unassigned::getShipments() {
    return shipments;
}
void
SWGSolution_unassigned::setShipments(QList<QString*>* shipments) {
    this->shipments = shipments;
}



} /* namespace Swagger */

