/**
 * Route Optimization API
 * Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGCostMatrix.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGCostMatrix::SWGCostMatrix(QString* json) {
    init();
    this->fromJson(*json);
}

SWGCostMatrix::SWGCostMatrix() {
    init();
}

SWGCostMatrix::~SWGCostMatrix() {
    this->cleanup();
}

void
SWGCostMatrix::init() {
    type = new QString("");
url = new QString("");
profile = new QString("");
}

void
SWGCostMatrix::cleanup() {
    if(type != NULL) {
        delete type;
    }
if(url != NULL) {
        delete url;
    }
if(profile != NULL) {
        delete profile;
    }
}

SWGCostMatrix*
SWGCostMatrix::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGCostMatrix::fromJsonObject(QJsonObject &pJson) {
    setValue(&type, pJson["type"], "QString", "QString");
setValue(&url, pJson["url"], "QString", "QString");
setValue(&profile, pJson["profile"], "QString", "QString");
}

QString
SWGCostMatrix::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGCostMatrix::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("url"), url, obj, QString("QString"));
    
        

    
    toJsonValue(QString("profile"), profile, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGCostMatrix::getType() {
    return type;
}
void
SWGCostMatrix::setType(QString* type) {
    this->type = type;
}

QString*
SWGCostMatrix::getUrl() {
    return url;
}
void
SWGCostMatrix::setUrl(QString* url) {
    this->url = url;
}

QString*
SWGCostMatrix::getProfile() {
    return profile;
}
void
SWGCostMatrix::setProfile(QString* profile) {
    this->profile = profile;
}



} /* namespace Swagger */

