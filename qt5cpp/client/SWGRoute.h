/**
 * Route Optimization API
 * Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * SWGRoute.h
 * 
 * 
 */

#ifndef SWGRoute_H_
#define SWGRoute_H_

#include <QJsonObject>


#include "SWGActivity.h"
#include <QList>
#include <QString>

#include "SWGObject.h"


namespace Swagger {

class SWGRoute: public SWGObject {
public:
    SWGRoute();
    SWGRoute(QString* json);
    virtual ~SWGRoute();
    void init();
    void cleanup();

    QString asJson ();
    QJsonObject* asJsonObject();
    void fromJsonObject(QJsonObject &json);
    SWGRoute* fromJson(QString &jsonString);

    QString* getVehicleId();
    void setVehicleId(QString* vehicle_id);
qint64 getDistance();
    void setDistance(qint64 distance);
qint64 getTransportTime();
    void setTransportTime(qint64 transport_time);
qint64 getCompletionTime();
    void setCompletionTime(qint64 completion_time);
qint64 getWaitingTime();
    void setWaitingTime(qint64 waiting_time);
QList<SWGActivity*>* getActivities();
    void setActivities(QList<SWGActivity*>* activities);

private:
    QString* vehicle_id;
qint64 distance;
qint64 transport_time;
qint64 completion_time;
qint64 waiting_time;
QList<SWGActivity*>* activities;
};

} /* namespace Swagger */

#endif /* SWGRoute_H_ */
