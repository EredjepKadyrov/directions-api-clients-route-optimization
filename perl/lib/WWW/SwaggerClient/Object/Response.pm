package WWW::SwaggerClient::Object::Response;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'job_id' => 'string',
    'status' => 'string',
    'waiting_in_queue' => 'int',
    'processing_time' => 'int',
    'solution' => 'Solution'
};

my $attribute_map = {
    'job_id' => 'job_id',
    'status' => 'status',
    'waiting_in_queue' => 'waiting_in_queue',
    'processing_time' => 'processing_time',
    'solution' => 'solution'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #unique identify of job - which you get when posting your request to the large problem solver
        'job_id' => $args{'job_id'}, 
        #indicates the current status of the job
        'status' => $args{'status'}, 
        #waiting time in ms
        'waiting_in_queue' => $args{'waiting_in_queue'}, 
        #processing time in ms. if job is still waiting in queue, processing_time is 0
        'processing_time' => $args{'processing_time'}, 
        #the solution. only available if status field indicates finished
        'solution' => $args{'solution'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
